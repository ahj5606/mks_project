<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="mks.Mapper.managerMapper">

	<select id="login" parameterType="map" resultType="map">
	 SELECT hp_code, hp_name, dept_name, dept_code,mks_id FROM mks_online
		WHERE mks_id=#{mks_id}
		AND mks_pw=#{mks_pw}
	</select>
	
	<select id="noticeSEL" parameterType="map" resultType="map">
		SELECT b.board_no, b.board_content, b.board_date, b.board_title, b.board_file, o.dept_name,b.mks_id
		 FROM mks_board b, mks_online o
		 WHERE b.mks_id = o.mks_id
		  AND o.hp_code=#{hp_code}
		 <if test="board_no!=null">
		 	AND b.board_no=#{board_no}
		 </if>
		 ORDER BY b.board_no desc
	</select>
	
	<select id="noticeSEARCH" parameterType="map" resultType="map">
		SELECT b.board_no, b.board_content, b.board_date, b.board_title, b.board_file, o.dept_name,b.mks_id
            FROM mks_board b, mks_online o
          WHERE b.mks_id = o.mks_id
           AND o.hp_code=#{hp_code}
           <if test="board_title!=null || dept_name!=null">
	           AND b.board_title LIKE '%' || #{board_title} || '%'
	           OR o.dept_name LIKE '%' || #{dept_name}|| '%'
           </if>
            ORDER BY b.board_no desc
	</select>
	
	<select id="getBoardNO" parameterType="int" resultType="int">
        SELECT NVL((
                     SELECT /*+index_desc(mks_board XPK게시판)*/ board_no
                          FROM mks_board
                       WHERE rownum = 1
                 ),0)+1 board_no
           FROM dual
	</select>
	
	<update id="noticeUPD" parameterType="map">
		UPDATE mks_board SET board_title=#{board_title}, board_content=#{board_content}
		<choose>
		 <when test="board_file != null">
		 ,board_file=#{board_file}
		 </when>
		 <otherwise>
		 </otherwise>
	 </choose>
		 WHERE board_no=#{board_no}
	</update>
	
	<delete id="noticeDEL" parameterType="map">
		DELETE FROM mks_board 
		 WHERE board_no=#{board_no}
	</delete>
 
	<insert id="noticeINS" parameterType="map">
		INSERT INTO mks_board (board_type,board_no, board_content, board_date, board_title,mks_id,board_file)
 			VALUES (0,#{board_no}, #{board_content}, TO_CHAR(sysdate,'YYYY-MM-DD'), 
 			        #{board_title},#{mks_id}
	 <choose>
		 <when test="board_file != null">
		 ,#{board_file})
		 </when>
		 <otherwise>
		 ,'')
		 </otherwise>
	 </choose>
 			        
 			        
	</insert>
	
	
	<select id="patientList" parameterType="map" resultType="map">
        SELECT MIN(mem.mem_name) mem_name , mem.mem_memcode mem_memcode, MIN(mem.mem_socialnum) mem_socialnum,MIN(mem.mem_phone) mem_phone
               FROM MKS_MEMBER mem , MKS_HISTORY his
           WHERE mem.mem_memcode = his.mem_memcode 
   		<if test="hp_code!=null">
	   		AND his.hp_code=#{hp_code}
   		</if>
   		GROUP BY mem.mem_memcode
   		ORDER BY mem.mem_memcode
	</select>
	
	<select id="patientSEL" parameterType="map" resultType="map">
        SELECT MIN(mem.mem_name) mem_name , mem.mem_memcode mem_memcode, MIN(mem.mem_socialnum) mem_socialnum,MIN(mem.mem_phone) mem_phone
               FROM MKS_MEMBER mem , MKS_HISTORY his
           WHERE mem.mem_memcode = his.mem_memcode 
   		<if test="hp_code!=null">
	   		AND his.hp_code=#{hp_code}
   		</if>
   		<if test="mem_name!=null">
	   		AND mem.mem_name=#{mem_name}
   		</if>
   		<if test="mem_socialnum!=null">
	   		AND mem.mem_socialnum LIKE '%'||#{mem_socialnum}||'%'
   		</if>
   		GROUP BY mem.mem_memcode
   		ORDER BY mem.mem_memcode
	</select>

	<select id="patientDetail" parameterType="map" resultType="map">
      SELECT mem.mem_name mem_name , mem.mem_memcode mem_memcode, mem.mem_socialnum
		 mem_socialnum,mem.mem_phone mem_phone , his.his_date his_date , HIS.HIS_CONTENT his_content , mem.mem_address mem_address
		 , HIS.DOC_NAME doc_name ,HIS.DEPT_NAME dept_name
		FROM MKS_MEMBER mem , MKS_HISTORY his
		WHERE mem.mem_memcode = his.mem_memcode 
		<if test="hp_code!=null">
			AND his.hp_code=#{hp_code}
		 </if>
		 AND mem.mem_memcode=#{mem_code}
		 ORDER BY mem.mem_memcode
	</select>
	
	<select id="doctorDEPT" parameterType="map" resultType="map">
		select distinct dept_name
            from mks_doctor
	</select>
	
	<select id="deptSearch" parameterType="map" resultType="map">
		select dept_code, dept_name, hp_name, hp_code from MKS_DEPT 
			where hp_code=#{hp_code}
	</select>
	
	<select id="reserveDay" parameterType="map" resultType="map">
		select sch_code,sch_time, sch_date, hp_code,hp_name from MKS_SCHEDULE 
			where hp_code=#{hp_code} AND doc_code =#{doc_code}
	</select>
	
	<select id="getSchCode" parameterType="int" resultType="int">
		SELECT NVL((
                     SELECT /*+index_desc(mks_schedule XPK예약일정)*/ sch_code
                          FROM mks_schedule
                       WHERE rownum = 1
                 ),0)+1 sch_code
           FROM dual
	</select>
	
	<select id="doctorDetail" parameterType="map" resultType="map">
		select dept_name, doc_code, hp_code,hp_name
        		,DOC_STATE,DOC_NAME,DOC_POSITION,DOC_EDUCATION
        		,DOC_PHONE,DOC_OFFDAY,doc_name,dept_code
			from mks_doctor
			where doc_code=#{doc_code}
	</select>

	<select id="doctorList" parameterType="map" resultType="map">
		select dept_name, doc_code, hp_code
        		,DOC_STATE,DOC_NAME,DOC_POSITION,DOC_EDUCATION
        		,DOC_PHONE,DOC_OFFDAY
			from mks_doctor
			where hp_code=#{hp_code} 
			
	</select>
	
	<select id="doctorSEL" parameterType="map" resultType="map">
		SELECT doc_code,doc_state, doc_education, doc_phone, doc_position
        , doc_name, doc_offday, hp_code, dept_name, dept_code, hp_name
			from MKS_DOCTOR
			WHERE hp_code =#{hp_code}
				<if test="dept_name!=null">
					And dept_name=#{dept_name}
				</if>
				<if test="doc_code!=null">
					And doc_code=#{doc_code}
				</if>
				<if test="doc_name!=null">
					And doc_name=#{doc_name}
				</if>
	</select>
	
	<insert id="doctorINS" parameterType="map">
		insert into MKS_DOCTOR(doc_code,doc_state,doc_education,doc_phone
                       ,doc_position,doc_name,doc_offday,dept_name,hp_code,dept_code,hp_name)
			values(#{doc_code},#{doc_state},#{doc_education},#{doc_phone},#{doc_position}
					,#{doc_name},#{doc_offday},#{dept_name},#{hp_code},#{dept_code},#{hp_name})
	</insert>
	
	<insert id="resINS" parameterType="map">
		insert into MKS_SCHEDULE(doc_code, hp_name, doc_name, hp_code
						,dept_name, dept_code, sch_date,sch_code, sch_time)
			values(#{doc_code},#{hp_name},#{doc_name},#{hp_code},#{dept_name}
					,#{dept_code},#{sch_date},#{sch_code},#{dept_name})
	</insert>
	
	<update id="doctorUPD" parameterType="map">
		UPDATE mks_doctor
		       set doc_code = #{doc_code}
		        ,doc_state = #{doc_state}
		       	,doc_education = #{doc_education}
		       	,doc_phone = #{doc_phone}
		       	,doc_position = #{doc_position}
		       	,doc_name = #{doc_name}
		       	,doc_offday = #{doc_offday}
		       	,dept_name = #{dept_name}
		       	,hp_code = #{hp_code}
		       	,dept_code = #{dept_code}
		       	,hp_name = #{hp_name}
		<where>
			<if test="doc_code!=null">
		 		and doc_code = #{doc_code}	
			</if>
		</where>  
	</update>
	<update id="resUPD" parameterType="map">
		UPDATE mks_schedule SET sch_time=#{sch_time} ,sch_date=#{sch_date} where sch_code=#{sch_code}
	</update>
	
	<delete id="doctorDEL" parameterType="map">
		DELETE FROM mks_doctor WHERE doc_code=#{doc_code}
	</delete>

	<select id="patientDoctor" parameterType="map" resultType="map">
     SELECT DOC_CODE,DOC_NAME,DEPT_NAME,DEPT_CODE,HP_NAME
         FROM MKS_DOCTOR 
         WHERE HP_CODE=#{hp_code}
	</select>
	
	<select id="getMemCode" parameterType="map" resultType="int">
          SELECT  mem_memcode+1
        		 FROM mks_member where rownum=1 
        	 ORDER BY mem_memcode DESC
	</select>
	
	<delete id="patientDEL" parameterType="map">
		DELETE FROM mks_history
		WHERE hp_code = #{hp_code}
		AND mem_memcode=#{mem_code}
	</delete>
	
	<insert id="patientINS" parameterType="map">
		INSERT INTO MKS_MEMBER(MEM_MEMCODE,MEM_NAME,MEM_SOCIALNUM,MEM_PHONE,MEM_ADDRESS,MEM_ONLINE)
		VALUES(#{mem_code},#{mem_name},#{mem_social},#{mem_phone},#{mem_address},0)
	</insert>
	
	<insert id="patientHIS" parameterType="map">
		INSERT INTO MKS_HISTORY(HIS_DATE,HIS_CONTENT,MEM_MEMCODE,DOC_CODE,DOC_NAME,HP_CODE,DEPT_NAME,DEPT_CODE,HP_NAME)
		VALUES(#{his_date},#{his_content},#{mem_code},#{doc_code},#{doc_name},#{hp_code},#{dept_name},#{dept_code},#{hp_name})		
	</insert>	


	<update id="patientUPD" parameterType="map">
		UPDATE MKS_MEMBER 
		SET MEM_NAME=#{mem_name} ,  mem_phone=#{mem_phone} ,mem_address=#{mem_address} 
		WHERE mem_memcode=#{mem_code}
	</update>
	
	<select id="reserveList" parameterType="map" resultType="map">
			select mem.mem_memcode, mem.mem_name, mem.mem_phone, res.*
			from  mks_member mem, mks_reserve res
			where mem.mem_memcode=res.mem_memcode
		<if test="hp_code!=null">
			AND res.hp_code=#{hp_code}
		</if>
		ORDER BY res.sch_date
	</select>	
	
	<select id="reserveDEPT" parameterType="map" resultType="map">
			select distinct dept_name
			from  mks_reserve
		<if test="hp_code!=null">
			where hp_code=#{hp_code}
		</if>
		 ORDER BY dept_name
	</select>	
	
	<select id="reserveSEL" parameterType="map" resultType="map">
			select mem.mem_memcode, mem.mem_name,  mem.mem_phone
			, res.mem_memcode, res.sch_code, res.doc_code, res.doc_name
							, res.dept_code, res.dept_name, res.hp_name, res.hp_code,
							 res.sch_date, res.res_time, res.res_memo, res.res_qrcode
			from  mks_member mem, mks_reserve res
			where mem.mem_memcode=res.mem_memcode
		<if test="hp_code!=null">
			AND res.hp_code=#{hp_code}
		</if>
		<if test="dept_name!=null">
			AND res.dept_name=#{dept_name}
		</if>
		<if test="mem_name!=null">
			AND mem.mem_name=#{mem_name}
		</if>
		<if test="doc_name!=null">
			AND res.doc_name=#{doc_name}
		</if>
		<if test="startDate!=null and endDate!=null">
			AND res.sch_date between #{startDate} and #{endDate}
		</if>
		ORDER BY res.sch_date
	</select>
	
	
		<select id="reserveDetail" parameterType="map" resultType="map">
			select mem.mem_memcode, mem.mem_name, mem.mem_phone, mem.mem_socialnum,
			 	res.res_memo, res.sch_code, res.doc_name,
			 	res.doc_code, res.res_time, res.hp_code,
				res.hp_name, res.dept_name, res.dept_code, res.sch_date
			from mks_member mem, mks_reserve res, mks_schedule sch
			where mem.mem_memcode=res.mem_memcode
			and SCH.SCH_CODE=RES.SCH_CODE
		<if test="hp_code!=null">
			AND res.hp_code=#{hp_code}
		</if>
		<if test="sch_code!=null">
			AND res.sch_code=#{sch_code}
		</if>
	</select>	
		<select id="reservePatient" parameterType="map" resultType="map">
        SELECT MIN(mem.mem_name) mem_name , mem.mem_memcode mem_memcode, MIN(mem.mem_socialnum) mem_socialnum,MIN(mem.mem_phone) mem_phone
               FROM MKS_MEMBER mem , MKS_HISTORY his
           WHERE mem.mem_memcode = his.mem_memcode 
   		<if test="hp_code!=null">
	   		AND his.hp_code=#{hp_code}
   		</if>
   		GROUP BY mem.mem_memcode
   		ORDER BY mem.mem_memcode
	</select>
	
	<select id="reserveDoctor" parameterType="map" resultType="map">
	 select DISTINCT doc_code, doc_name,dept_name,dept_code,HP_NAME,hp_code
		from MKS_SCHEDULE
	<if test="hp_code!=null">
		where hp_code=#{hp_code}
	</if>
		ORDER BY doc_name
	</select>
	
	<select id="reserveSchedule" parameterType="map" resultType="map">
	   select sch_code, sch_date, substr(sch_time,0,2)||':'||substr(sch_time,3,2) sch_time
        from mks_schedule
        where sch_code not in (select sch_code from mks_reserve)
		and doc_code=#{doc_code}
		<if test="hp_code!=null">
		AND hp_code=#{hp_code}
		</if>
		ORDER BY sch_date
	</select>
	<insert id="reserveINS" parameterType="map">
	insert into mks_reserve (mem_memcode, sch_code, doc_code, doc_name
							, dept_code, dept_name, hp_name, hp_code,
							 sch_date, res_time, res_memo, res_qrcode)
							 VALUES(#{mem_memcode},
								   #{sch_code},
								   #{doc_code},
								   #{doc_name},
								   #{dept_code},
								   #{dept_name},
								   #{hp_name},
								   #{hp_code},
								   #{sch_date},
								   #{res_time},
								   #{res_memo},
								   #{res_qrcode}
								  )
							 
	</insert>
	
	<update id="reserveUPD" parameterType="map">
           UPDATE mks_reserve
               set
              mem_memcode= #{mem_memcode}
              WHERE sch_code= #{sch_code}
	</update>
	
	<delete id="reserveDEL" parameterType="map">
	DELETE FROM mks_reserve WHERE mem_memcode=#{mem_memcode}
	AND sch_code = #{sch_code}
	</delete>
		<select id="getResTotal" parameterType="map" resultType="int">
	    SELECT count(mr.sch_code)
        FROM MKS_RESERVE  mr, mks_schedule ms
        WHERE mr.sch_code=ms.sch_code(+)
	</select>
	
	
	
	          
</mapper>